DEFINE_ACTION_FUNCTION spellhold_cost
    STR_VAR version="0" // this is the cost in thousands of gp
BEGIN
    // work out variables
    OUTER_SET asking_price=version *1000
    OUTER_SET asking_price_minus_one = asking_price - 1
    OUTER_SET temp=(version *3)/4
    OUTER_SET actual_price=temp* 1000
    OUTER_SET actual_price_minus_one = actual_price - 1
    OUTER_SET threshold_price=asking_price / 4
    OUTER_SET threshold_price_minus_one=threshold_price - 1
    OUTER_SPRINT asking_price_string ~%version%,000~
    OUTER_SPRINT actual_price_string ~%temp%,000~

    // swap strings
    
    ACTION_FOR_EACH tlk_entry IN 20944 20945 20970 20990 20991 34187 6601 21032 21512 49071 21832 49061 49839 49841 49844 22046 BEGIN
          LAF substitute_tlk_entry INT_VAR tlk_entry 
                                   STR_VAR arguments= ~"20,000" => "%asking_price_string%"
                                                                      "20[, \.]?000" => "%asking_price_string%"
                                                                      "15[, \.]?000" => "%actual_price_string%"
                                                                      ~
          END
    END


       LAF swap_text STR_VAR files=~bodhi.dlg gaelan.dlg ar0800.bcs baldur.bcs~ swaps= ~
                                                                       PartyGoldLT(20000) => PartyGoldLT(%asking_price%)
                                                                       PartyGoldLT(50000) => PartyGoldLT(%asking_price%)
                                                                       PartyGoldLT(15000) => PartyGoldLT(%actual_price%)
			                                               PartyGoldLT(5000) => PartyGoldLT(%threshold_price%)
			                                               PartyGoldGT(49999) => PartyGoldGT(%asking_price_minus_one%)
			                                               PartyGoldGT(19999) => PartyGoldGT(%asking_price_minus_one%)
			                                               PartyGoldGT(14999) => PartyGoldGT(%actual_price_minus_one%)
                                                                       PartyGoldGT(4999) => PartyGoldGT(%threshold_price_minus_one%)
			                                               TakePartyGold(20000) => TakePartyGold(%asking_price%)
			                                               TakePartyGold(15000) => TakePartyGold(%actual_price%)
			                                               DestroyGold(15000) => DestroyGold(%actual_price%)
                                                                       ~
       END


       LAF spellhold_compatibility INT_VAR original_price= ~%asking_price%~ actual_price END

END

DEFINE_ACTION_FUNCTION spellhold_compatibility // legacy code
     INT_VAR original_price=0 actual_price=0
BEGIN

// RE compatibility - other mod compatibility to have this form too if I come across any

	ACTION_IF FILE_EXISTS_IN_GAME ~re_bodh1.bcs~ THEN BEGIN
		OUTER_SPRINT ~mod_dlg~ ~bodhi~
		OUTER_SET ~reply~=0
		OUTER_SPRINT ~sourcestring~ @1301
		OUTER_SET ~mod_string~=STATE_WHICH_SAYS @1301 FROM ~bodhi~
		OUTER_SPRINT ~crude_1~ @1302
		OUTER_SPRINT ~crude_2~ @1303
		OUTER_SPRINT ~crude_3~ @1304
		OUTER_SPRINT ~crude_4~ @1305
		OUTER_SPRINT ~crude_5~ @1306
		OUTER_SPRINT ~tra_check~ @1307
		LAUNCH_ACTION_MACRO ~spellholdcost_mod_compatibility~
	END

// Xan compatibility

	ACTION_IF FILE_EXISTS_IN_GAME ~o#xans.bcs~ THEN BEGIN
		OUTER_SPRINT ~mod_dlg~ ~bo#xan~
		OUTER_SET ~reply~=0
		OUTER_SPRINT ~sourcestring~ @1311
		OUTER_SET ~mod_string~=STATE_WHICH_SAYS @1311 FROM ~bo#xan~
		OUTER_SPRINT ~crude_1~ @1312
		OUTER_SPRINT ~crude_2~ @1313
		OUTER_SPRINT ~crude_3~ @1314
		OUTER_SPRINT ~crude_4~ @1315
		OUTER_SPRINT ~crude_5~ @1316
		OUTER_SPRINT ~tra_check~ @1317
		LAUNCH_ACTION_MACRO ~spellholdcost_mod_compatibility~

		OUTER_SPRINT ~mod_dlg~ ~o#xanj~
		OUTER_SET ~reply~=1
		OUTER_SPRINT ~sourcestring~ @1321
		OUTER_SPRINT ~crude_1~ @1322
		OUTER_SPRINT ~crude_2~ @1323
		OUTER_SPRINT ~crude_3~ @1324
		OUTER_SPRINT ~crude_4~ @1325
		OUTER_SPRINT ~crude_5~ @1326
		OUTER_SPRINT ~tra_check~ @1327
		LAUNCH_ACTION_MACRO ~spellholdcost_mod_compatibility~ 
	END

// Crossmod compatibility (Xan/Tiax)

	ACTION_IF MOD_IS_INSTALLED ~CROSSMODBG2/SETUP-CROSSMODBG2.TP2~ 0 THEN BEGIN // suboptimal, but I don't think crossmod is detectable otherwise 
		ACTION_IF FILE_EXISTS_IN_GAME ~O#tiax25.dlg~ AND FILE_EXISTS_IN_GAME ~o#xan25.dlg~ THEN BEGIN
			OUTER_SPRINT ~mod_dlg~ ~bo#xan~
			OUTER_SET ~reply~=0
			OUTER_SPRINT ~sourcestring~ @1331
			OUTER_SET ~mod_string~=STATE_WHICH_SAYS @1331 FROM ~bo#xan~
			OUTER_SPRINT ~crude_1~ @1332
			OUTER_SPRINT ~crude_2~ @1333
			OUTER_SPRINT ~crude_3~ @1334
			OUTER_SPRINT ~crude_4~ @1335
			OUTER_SPRINT ~crude_5~ @1336
			OUTER_SPRINT ~tra_check~ @1337
			LAUNCH_ACTION_MACRO ~spellholdcost_mod_compatibility~

			OUTER_SPRINT ~mod_dlg~ ~bo#tiax~
			OUTER_SET ~reply~=0
			OUTER_SPRINT ~sourcestring~ @1341
			OUTER_SET ~mod_string~=STATE_WHICH_SAYS @1341 FROM ~bo#tiax~
			OUTER_SPRINT ~crude_1~ @1342
			OUTER_SPRINT ~crude_2~ @1343
			OUTER_SPRINT ~crude_3~ @1344
			OUTER_SPRINT ~crude_4~ @1345
			OUTER_SPRINT ~crude_5~ @1346
			OUTER_SPRINT ~tra_check~ @1347
			LAUNCH_ACTION_MACRO ~spellholdcost_mod_compatibility~
		END
	END
END


DEFINE_ACTION_MACRO ~spellholdcost_mod_compatibility~ BEGIN

	ACTION_IF ~%mod_string%~>0 THEN BEGIN

		OUTER_SPRINT ~subcheck~ @10

		ACTION_IF ~%subcheck%~ STRING_EQUAL_CASE ~LANGUAGE_CAN_SUBSTITUTE~ OR ~%tra_check%~ STRING_EQUAL_CASE ~NOT_TRANSLATED~ THEN BEGIN
	
			OUTER_INNER_PATCH_SAVE ~newstring~ ~%sourcestring%~ BEGIN
				REPLACE_TEXTUALLY ~20,000~ ~%original_price%~
				REPLACE_TEXTUALLY ~15,000~ ~%actual_price%~
				REPLACE_TEXTUALLY ~20000~ ~%original_price%~
				REPLACE_TEXTUALLY ~15000~ ~%actual_price%~
				SPRINT ~15K_text~ @1601
				SPRINT ~20K_text~ @1602
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%15K_text%~ ~%actual_price%~
				REPLACE_TEXTUALLY CASE_INSENSITIVE ~%20K_text%~ ~%original_price%~
			END

		END ELSE BEGIN

			ACTION_IF ~%verybignumber%~=40000 THEN BEGIN
				OUTER_SPRINT ~newstring~ ~%crude_1%~
			END
			ACTION_IF ~%verybignumber%~=60000 THEN BEGIN
				OUTER_SPRINT ~newstring~ ~%crude_2%~
			END
			ACTION_IF ~%verybignumber%~=80000 THEN BEGIN
				OUTER_SPRINT ~newstring~ ~%crude_3%~
			END
			ACTION_IF ~%verybignumber%~=100000 THEN BEGIN
				OUTER_SPRINT ~newstring~ ~%crude_4%~
			END
			ACTION_IF ~%verybignumber%~=120000 THEN BEGIN
				OUTER_SPRINT ~newstring~ ~%crude_5%~
			END


		END
	
		ACTION_IF ~reply~=1 THEN BEGIN

			OUTER_INNER_PATCH ~                          ~ BEGIN // this just puts the strings into dialog.tlk
				SAY_EVALUATED 0x0 ~%sourcestring%~
				SAY_EVALUATED 0x4 ~%newstring%~
				READ_LONG 0x0 ~oldstring_num~
				READ_LONG 0x4 ~newstring_num~
			END

			COPY_EXISTING ~%mod_dlg%.dlg~ ~override~
				DECOMPILE_DLG_TO_D
				REPLACE_TEXTUALLY ~%oldstring_num%~ ~%newstring_num%~
				COMPILE_D_TO_DLG
			BUT_ONLY_IF_IT_CHANGES
			
		END ELSE BEGIN
		



			<<<<<<<< .../stratagems-inline/dw#spellhold_mod.d
		
			REPLACE_SAY dlg state ~string~
		
			>>>>>>>>
				

			COPY ~.../stratagems-inline/dw#spellhold_mod.d~ ~override~
				REPLACE_TEXTUALLY ~dlg~ ~%mod_dlg%~	
				REPLACE_TEXTUALLY ~state~ ~%mod_string%~
				REPLACE_TEXTUALLY ~string~ ~%newstring%~	
	
			COMPILE ~override/dw#spellhold_mod.d~
	
			
		
	
	
		END
		
	END

END



