DEFINE_ACTION_FUNCTION random_scrolls BEGIN

	LAF check_ini STR_VAR ini=scroll_drop_fraction RET value END
	ACTION_IF value>0 BEGIN
		OUTER_SET scroll_drop_fraction=value / 2
		OUTER_SET scroll_drop_fraction=(scroll_drop_fraction > 1? scroll_drop_fraction : 1)
	END ELSE BEGIN
		OUTER_SET scroll_drop_fraction = 5
	END
	PRINT "scroll drop fraction is %scroll_drop_fraction%"

    // make the rndtres entries and items; remove old part
    LAF make_random_scrolls END
    LAF nuke_extant_rndscr END
  
	// patch creatures
  
    COPY_EXISTING_REGEXP GLOB ".*\.cre" override
	  PATCH_TRY
		LPF CRE_patch_random_scroll END
	  WITH DEFAULT
			LPF regexp_warning STR_VAR parent=random_scrolls END
	  END
	BUT_ONLY
	
	// patch areas
	
	COPY_EXISTING_REGEXP GLOB ".*\.are" override
	  PATCH_TRY
    	LPF ARE_patch_random_scroll END
	  WITH DEFAULT
	 			LPF regexp_warning STR_VAR parent=random_scrolls END
	  END
	BUT_ONLY


END

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///   Goes through all arcane spells with scrolls, organises them by level. Adds a row for each level to rndtres and
///   creates a rndtres item for the row. Pads with an appropriate treasure item
///
///   levels are on a 0-8 convention, the items are dwrnscr%level%
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION make_random_scrolls BEGIN

   ACTION_IF is_eet BEGIN
		ACTION_DEFINE_ASSOCIATIVE_ARRAY rndtres_padding BEGIN
			0=>rndtre07
			1=>rndtre08
			2=>rndtre09
			3=>rndtre03
			4=>rndtre04
			5=>rndtre04
			6=>rndtre05
			7=>rndtre05
			8=>"*"
		END 		
   END ELSE
   ACTION_IF is_bg2 BEGIN
 		ACTION_DEFINE_ASSOCIATIVE_ARRAY rndtres_padding BEGIN
			0=>rndtre03
			1=>rndtre03
			2=>rndtre03
			3=>rndtre03
			4=>rndtre04
			5=>rndtre04
			6=>rndtre05
			7=>rndtre05
			8=>"*"
		END  
   END ELSE BEGIN
 		ACTION_DEFINE_ASSOCIATIVE_ARRAY rndtres_padding BEGIN
			0=>rndtre03
			1=>rndtre04
			2=>rndtre05
			3=>"*"
			4=>"*"
			5=>"*"
			6=>"*"
			7=>"*"
			8=>"*"
		END    
   END


   ACTION_IF is_bg2 BEGIN
      OUTER_SET level_max=7
   END ELSE BEGIN
      OUTER_SET level_max=3
   END

   ACTION_FOR_EACH spell IN
       WIZARD_FIND_FAMILIAR
   BEGIN
      OUTER_SPRINT $spell_is_absent("%spell%") ""
   END


    OUTER_FOR (level=0;level<=level_max;level+=1) BEGIN
       OUTER_SPRINT $scrolls_by_level("%level%") ""
       OUTER_SET $scroll_list_length("%level%")=0
    END
    ACTION_PHP_EACH arcane_scroll_list AS spell=>file BEGIN
        ACTION_IF !VARIABLE_IS_SET $spell_is_absent("%spell%") BEGIN
            OUTER_SPRINT level_name  "%spell%_LEVEL"
            OUTER_SET level = "%level_name%"
            ACTION_IF level<=level_max BEGIN
              OUTER_SET $scroll_list_length("%level%") +=1
              ACTION_IF $scroll_list_length("%level%") >40 BEGIN
                LAF warning STR_VAR warning="More than 40 spells at level %level%; skipping any new ones" END
              END ELSE BEGIN
                OUTER_SPRINT temp $scrolls_by_level("%level%")
                OUTER_SPRINT $scrolls_by_level("%level%") "%temp% %file%"
              END
            END
        END
    END
    
    ACTION_IF !FILE_EXISTS_IN_GAME "rndtres.2da" BEGIN
       COPY ".../stratagems-inline/rndtres.2da" override
    END
    COPY_EXISTING "rndtres.2da" override	
       FOR (level=0;level<=level_max;level+=1) BEGIN
			SPRINT filler $rndtres_padding("%level%")
            SET length=$scroll_list_length("%level%")
            SPRINT temp $scrolls_by_level("%level%")
            SPRINT temp "dwrnscr%level% %temp%"
            WHILE length<40 BEGIN
               length +=1
               SPRINT temp "%temp% %filler%"
            END
            INSERT_2DA_ROW 0 41 "%temp%"
            INNER_ACTION BEGIN
               COPY_EXISTING "rndtre01.itm" "override/dwrnscr%level%.itm"
            END
       END
       PRETTY_PRINT_2DA
    BUT_ONLY

END

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///  As a patch function, consider a string and swap it for a random scroll if appropriate
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION rndtre_area_swap
  STR_VAR in=""
  RET out
BEGIN
	PATCH_RANDOM_SEED blook
   SPRINT out "%in%"
   PATCH_MATCH "%in%" WITH
   "rndtre0.*" BEGIN
      INNER_PATCH_SAVE number "%in%" BEGIN
         DELETE_BYTES 0x0 7
      END
      PATCH_IF GAME_IS eet BEGIN
         PATCH_IF number>5 BEGIN
            SET number -= 4
            SET rndtre_bg1=1
         END ELSE BEGIN
            SET rndtre_bg1=0
         END
      END ELSE
      PATCH_IF GAME_IS bg2ee BEGIN
         SET rndtre_bg1=0
      END ELSE BEGIN
         SET rndtre_bg1=1
      END
      PATCH_IF rndtre_bg1 BEGIN
        PATCH_MATCH "%number%" WITH
        1 2 BEGIN
          PATCH_IF RANDOM (0 99) <=4 BEGIN
             SPRINT out dwrnscr0
          END
        END
        3 BEGIN
          PATCH_MATCH RANDOM (0 99) WITH
          0 BEGIN
             SPRINT out dwrnscr1
          END
          1 2 3 4 5 6 7 8 9 10 11 12 13 14 BEGIN
             SPRINT out dwrnscr0
          END
          DEFAULT
          END
        END
        4 BEGIN
          PATCH_MATCH RANDOM (0 99) WITH
          0 BEGIN
             SPRINT out dwrnscr2
          END
          1 2 3 4 5 6 7 8 9 10 11 12 13 14 BEGIN
             SPRINT out dwrnscr1
          END
          DEFAULT
          END

        END
        5 BEGIN
          PATCH_MATCH RANDOM (0 99) WITH
          0 BEGIN
             SPRINT out dwrnscr3
          END
          1 2 3 4 5 6 7 8 9 10 11 12 13 14 BEGIN
             SPRINT out dwrnscr2
          END
          DEFAULT
          END
        END
        DEFAULT
        END
      END ELSE BEGIN
         PATCH_MATCH "%number%" WITH
         2 BEGIN
             PATCH_MATCH RANDOM (0 99) WITH
             0 BEGIN
                SPRINT out dwrnscr0
             END
             1 BEGIN
                SPRINT out dwrnscr1
             END
             2 BEGIN
                SPRINT out dwrnscr2
             END
             3 BEGIN
                SPRINT out dwrnscr3
             END
             DEFAULT
             END
         END
         3 BEGIN
             PATCH_MATCH RANDOM (0 99) WITH
             0 BEGIN
                SPRINT out dwrnscr5
             END
             1 BEGIN
                SPRINT out dwrnscr4
             END
             2 3 4 BEGIN
                SPRINT out dwrnscr3
             END
             5 6 7 BEGIN
                SPRINT out dwrnscr2
             END
             8 9 10 BEGIN
                SPRINT out dwrnscr1
             END
             11 12 13 BEGIN
                SPRINT out dwrnscr0
             END
             DEFAULT
             
             END
         END
         4 BEGIN
             PATCH_MATCH RANDOM (0 99) WITH
             0 BEGIN
                SPRINT out dwrnscr6
             END
             2 3 4 5 6 7 BEGIN
                SPRINT out dwrnscr5
             END
             8 9 10 11 12 13 14 BEGIN
                SPRINT out dwrnscr4
             END
             DEFAULT END
         END
         5 BEGIN
             PATCH_MATCH RANDOM (0 99) WITH
             0 1 2 3 4 5 BEGIN
                SPRINT out dwrnscr7
             END
             6 7 8 9 10 11 12 BEGIN
                SPRINT out dwrnscr6
             END
             DEFAULT 
             END
         END
         DEFAULT
         END
      END
   END
   DEFAULT
   END




END


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///  Patches area's items to swap RNDTRE for scrolls
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION ARE_patch_random_scroll BEGIN
       PATCH_IF INDEX_BUFFER ("RNDTRE")>=0 BEGIN // initial filter
          GET_OFFSET_ARRAY itm_arr 0x78 2 0x76 2 0 0 0x14
          PHP_EACH itm_arr AS ind=>offset BEGIN
             READ_ASCII offset resref
			 PATCH_MATCH "%resref%" WITH
			 "rndtre0.*" BEGIN
					rng=RANDOM (1 scroll_drop_fraction)
					PATCH_IF rng=1 BEGIN
						LPF determine_scroll_swap STR_VAR rndtre="%resref%" RET scroll_item END
						PATCH_IF NOT "%scroll_item%" STRING_EQUAL_CASE "null" BEGIN
							WRITE_ASCIIE offset "%scroll_item%" (8)
						END
					END
			 END
			 DEFAULT END
          END
       END
END
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///  Patches creature's items to swap RNDTRE for scrolls
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION CRE_patch_random_scroll BEGIN
		// sort out duplicates
		LPF CRE_deduplicate_items END
       PATCH_IF INDEX_BUFFER ("RNDTRE")>=0 BEGIN // initial filter
        // some items are hidden cruft; start by collecting list of actually-present arguments
           CLEAR_ARRAY slot_arr
           READ_LONG 0x2b8 slot_off
           FOR (i=0;i<37;i+=1) BEGIN
              READ_SHORT (slot_off+i*2) slot_num
              SPRINT $slot_arr("%slot_num%") ""
           END
        // now get the item set and do swaps
           GET_OFFSET_ARRAY itm_array CRE_V10_ITEMS
           PHP_EACH itm_array AS ind=>offset BEGIN
            PATCH_IF VARIABLE_IS_SET $slot_arr("%ind%") BEGIN
              READ_ASCII offset resref
              PATCH_MATCH "%resref%" WITH
              "rndtre0.*" BEGIN
					rng=RANDOM (1 scroll_drop_fraction)
					PATCH_IF rng=1 BEGIN
						LPF determine_scroll_swap STR_VAR rndtre="%resref%" RET scroll_item END
						PATCH_IF NOT "%scroll_item%" STRING_EQUAL_CASE "null" BEGIN
							WRITE_ASCIIE offset "%scroll_item%" (8)
							WRITE_SHORT (offset+0xa) 0
						END
						
					END
              END
              DEFAULT END			  
			  
            END
           END
       END
END


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///  Takes as input the name of the rndtre item; returns the scroll item to swap
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION determine_scroll_swap
	STR_VAR rndtre=""
	RET scroll_item
BEGIN
	PATCH_IF is_bg2 BEGIN
		PATCH_MATCH "%rndtre%" WITH
			rndtre03 BEGIN
				rng=RANDOM (1 4)
				PATCH_MATCH "%rng%" WITH
				1 BEGIN
					SPRINT scroll_item dwrnscr0
				END
				2 BEGIN
					SPRINT scroll_item dwrnscr1				
				END
				3 BEGIN
					SPRINT scroll_item dwrnscr2				
				END
				4 BEGIN
					SPRINT scroll_item dwrnscr3				
				END
				DEFAULT END // never arises
			END
			rndtre04 BEGIN
				rng=RANDOM (1 2)
				PATCH_MATCH "%rng%" WITH
				1 BEGIN
					SPRINT scroll_item dwrnscr4
				END
				2 BEGIN
					SPRINT scroll_item dwrnscr5			
				END
				DEFAULT END // never arises			
			END
			rndtre05 BEGIN
				rng=RANDOM (1 2)
				PATCH_MATCH "%rng%" WITH
				1 BEGIN
					SPRINT scroll_item dwrnscr6
				END
				2 BEGIN
					SPRINT scroll_item dwrnscr7			
				END
				DEFAULT END // never arises	
			END
			// these ones only apply on EET
			rndtre07 BEGIN 
				SPRINT scroll_item dwrnscr0
			END
			rndtre08 BEGIN 
				SPRINT scroll_item dwrnscr1
			END
			rndtre09 BEGIN 
				SPRINT scroll_item dwrnscr2
			END
			
			DEFAULT
				SPRINT scroll_item null
			END
	END ELSE BEGIN
		PATCH_MATCH "%rndtre%" WITH
			rndtre03 BEGIN 
				SPRINT scroll_item dwrnscr0
			END
			rndtre04 BEGIN 
				SPRINT scroll_item dwrnscr1
			END
			rndtre05 BEGIN 
				SPRINT scroll_item dwrnscr2
			END
			DEFAULT
			SPRINT scroll_item null
		END

	END







END



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///  Remove the scroll entries from rndmag and rndscr
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION nuke_extant_rndscr 
BEGIN
   ACTION_IF GAME_IS eet BEGIN
        COPY_EXISTING
            rndtreas.2da override
            rndmagic.2da override
               REPLACE_TEXTUALLY rndscr01 025
               REPLACE_TEXTUALLY rndscr02 050
               REPLACE_TEXTUALLY rndscr03 100
               REPLACE_TEXTUALLY rndscr04 005
               REPLACE_TEXTUALLY rndscr05 030
               REPLACE_TEXTUALLY rndscr06 070
               REPLACE_TEXTUALLY rndscr07 100
   END ELSE
   ACTION_IF GAME_IS bg2ee BEGIN
        COPY_EXISTING
            rndtreas.2da override
            rndmagic.2da override
               REPLACE_TEXTUALLY rndscr01 025
               REPLACE_TEXTUALLY rndscr02 050
               REPLACE_TEXTUALLY rndscr03 100
   END ELSE BEGIN // bgee
        COPY_EXISTING
            rndtreas.2da override
            rndmagic.2da override
               REPLACE_TEXTUALLY rndscr01 005
               REPLACE_TEXTUALLY rndscr02 030
               REPLACE_TEXTUALLY rndscr03 070
               REPLACE_TEXTUALLY rndscr04 100
   END

END

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




<<<<<<<< .../stratagems-inline/rndtres.2da
2DA      V1.0
*
         1        2        3        4        5        6        7        8        9        10       11       12       13       14       15       16       17       18       19       20       21       22       23       24       25       26       27       28       29       30       31       32       33       34       35       36       37       38       39       40
>>>>>>>>
