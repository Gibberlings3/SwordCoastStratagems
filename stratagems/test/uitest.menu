function unmemorizePriestSpell(slot)
	showPriestMemorizationFlash = false
	priestScreen:UnmemorizeSpell( bottomSpells[slot].level, bottomSpells[slot].memorizedIndex )
	Infinity_PlaySound('GAM_44')
end

`
menu
{
	name 'PRIEST'
	align center center

	onopen 
	"
		showPriestMemorizationFlash = false
		pushSidebars()
		prpage = nil
		setPriestBookLevel(1)
		currentAnimationID = 1
		updateCounterMemorizationSparkles = 1
	"
	onclose 
	"
		popSidebars()
	"

	button
	{
		on escape
		action
		"
			--Return to world screen on escape 
			e:SelectEngine(worldScreen)
		"
	}

	template
	{
		label
		{
			enabled "showMemorizationSparkle(instanceId)"
			ignoreEvents
			area 0 0 45 42
			bam "FLASHBR"
			usealpha lua "true"
			frame lua "memorizationFlashes[instanceId][2]"
			align center center
		}
		name "TEMPLATE_priestMemorizationSparkle"
	}



	label
	{
		area 0 0 864 710
		mosaic "GUIPRB"
	}
	label
	{
		area		82 10 700 44
		text		"PRIEST_SCROLL_TITLE" 
		text style	"title"
	}
	label
	{
		area 		210 59 446 30
		text lua	"priestName"
		text style	"label"
	}
	button
	{
		area		168 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	0
		enabled		"maxPriestPage > 0"
		action		"setPriestBookLevel(1)"
	}
	button
	{
		area		246 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	1
		enabled		"maxPriestPage > 1"
		action		"setPriestBookLevel(2)"
	}
	button
	{
		area		328 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	2
		enabled		"maxPriestPage > 2"
		action		"setPriestBookLevel(3)"
	}
	button
	{
		area		403 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	3
		enabled		"maxPriestPage > 3"
		action		"setPriestBookLevel(4)"
	}
	button
	{
		area		484 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	4
		enabled		"maxPriestPage > 4"
		action		"setPriestBookLevel(5)"
	}
	button
	{
		area		566 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	5
		enabled		"maxPriestPage > 5"
		action		"setPriestBookLevel(6)"
	}
	button
	{
		area		642 110 54 54
		bam		GUIPRTC
		highlightgroup	prpage
		sequence	6
		enabled		"maxPriestPage > 6"
		action		"setPriestBookLevel(7)"
	}

	list
	{
		column 
		{ 
			width 15
			label
			{
				area	0 0 -1 -1
				bam	lua "characters[id].priestSpells[currentSpellLevel][rowNumber].icon"
				align	center center
			}
		}
		column 
		{ 
			width 85
			label
			{
				area		0 0 -1 -1
				text lua "Infinity_FetchString( characters[id].priestSpells[currentSpellLevel][rowNumber].name)"
				text style "normal_parchment"
				text align left center
			}
		}

		area 82 182 326 370
		
		name "bookListPriest"
		rowheight	40
		table		"characters[id].priestSpells[currentSpellLevel]"
		var		currentBookSpell
		scrollbar	'GUISCRC'
		action		"
			if cellNumber == 1 then
				if #bottomSpells < #bottomSpellsPlaceHolder then
					createPriestMemorizationSparkle(0, 0, 40, 40, 'bookListPriest', -1)
					Infinity_PlaySound('GAM_24')
					showPriestMemorizationFlash = true
				end
				priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell].index )
			end
			if lastCurrentBookSpell == currentBookSpell and cellNumber == 2 then
				currentBookSpell = 0
			else
				lastCurrentBookSpell = currentBookSpell
			end
		"

	}

	text
	{
		area		438 182 340 370
		text lua 	"priestBookDescription()"
		text style	"normal_parchment"
		scrollbar	'GUISCRC'
	}

	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	"SPELFRMS"
				sequence 0
				align	center center
			}
		}

		area 70 654 718 36
		
		rowwidth	36
		table		"bottomSpellsPlaceHolder"
	}
	list
	{
		column 
		{ 
			width 100
			label
			{
				area	0 0 -1 -1
				bam	lua "bottomSpells[rowNumber].icon"
				align	center center
				greyscale lua "bottomSpells[rowNumber].castable == 0"
			}
		}

		area 70 654 718 36
		
		name "memorizedListPriest"
		enabled 	"#bottomSpells ~= 0"
		rowwidth	36
		table		"bottomSpells"
		var		currentBottomSpell
		action		
		"
			if bottomSpells[currentBottomSpell] then
				if findMemorizedUncastable(bottomSpells[currentBottomSpell].resref) == -1 and Infinity_GetOption(41, 9) ~= 0 then
					popup2Button(11824, 'REMOVE_BUTTON', function() unmemorizePriestSpell(currentBottomSpell) end, 'CANCEL_BUTTON')
				else
					unmemorizePriestSpell(currentBottomSpell)
				end
			end
		"
	}


	label
	{
		area 272 598 276 40
		text lua "priestPageInfo()"
		text style "label"
		rectangle 0
	}

	button
	{
		area 60 594 204 44
		bam GUIOSTLM
		enabled "characters[id].hasClericBook"
		clickable lua "#bottomSpells < characters[id].priestDetails[currentSpellLevel].maxMemorized and currentBookSpell ~= 0"
		text "MEMORIZE_LABEL"
		text style "button"
		action 
		"
			createPriestMemorizationSparkle(0, 0, 40, 40, 'bookListPriest', -1)
			Infinity_PlaySound('GAM_24')
			showPriestMemorizationFlash = true
			priestScreen:MemorizeSpell( characters[id].priestSpells[currentSpellLevel][currentBookSpell].level, characters[id].priestSpells[currentSpellLevel][currentBookSpell].index )

		"
		
	}

	label
	{
		area 0 0 865 710
		fill        0 0 0 176
		enabled "priestBookEnabled == false"
	}
}
`
	versionString = ""
	function canClickSaveLoad()
		return game:IsClient() == false
	end
`
menu
{
	name "ESC_MENU"
	ignoreesc
	align center center
	onOpen "
		versionString = CBaldurChitin:GetVersionString()
		pushSidebars()
	"
	onClose "popSidebars()"
	label
	{
		area 0 0 864 768
		mosaic STONEOPT
	}
	label
	{
		area 258 114 350 44
		text "OPTIONS_TITLE"
		text style "title"
	}
	label
	{
		area 244 145 378 29
		text lua "versionString"
		text style "normal"
		text align center center
	}
	button
	{
		area 570 442 260 76
		bam 'STARTMBT'
		sequence 5
		pad 10 8 10 8
		text style "button"
		text 		"GAMEPLAY_BUTTON"
		text style	"button"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )

		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 4
		area 597 354 233 84
		pad 10 8 10 8
		text style "button"
		text 		"GRAPHICS_BUTTON"
		text style	"button"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_GRAPHICS' )

		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 3
		area 564 276 266 74
		pad 10 8 10 8
		text style "button"
		text 		"SOUND_BUTTON"
		text style	"button"
		
		action
		"
			Infinity_PushMenu( 'OPTIONS_SOUND' )

		"
	}
	button
	{
		area 284 628 300 45
		bam GUIOSTCL
		text "RETURN_GAME_BUTTON"
		text style "button"
		action
		"
			e:SelectEngine( worldScreen );
		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 0
		area 32 276 262 74
		pad 10 8 10 8
		text style "button"
		text "LOAD_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			popup2Button(19531, 'LOAD_BUTTON', function() optionsScreen:LoadGame() end)
		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 1
		area 32 354 236 84
		pad 10 8 10 8
		text style "button"
		text "QUIT_GAME_BUTTON"
		action
		"
			if e:IsTouchUI() then
				popup3Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			else
				popup4Button(16456, 
				'CANCEL_BUTTON', nil, 
				'MAIN_MENU_BUTTON', function() optionsScreen:QuitGame() end, 
				'QUIT_BUTTON', function() Infinity_ShutdownGame() end, 
				'SAVE_BUTTON', function() optionsScreen:SaveGame(0) end
				)
			end
		"
	}
	button
	{
		bam 'STARTMBT'
		sequence 2
		area 32 442 262 76
		pad 10 8 10 8
		text style "button"
		text "SAVE_GAME_BUTTON"
		clickable lua "canClickSaveLoad()"
		action
		"
			optionsScreen:SaveGame(0)
		"
	}
	
	label
	{
		area 244 174 378 454
		bam 'BIGLOGO'
		align center center
		frame lua 'logoFrame'
	}
}

`
OptionsButtons = 
{
	{text = "GAMEPLAY_BUTTON", menu = "OPTIONS_GAMEPLAY", sequence = 0}, 
	{text = "GRAPHICS_BUTTON", menu = "OPTIONS_GRAPHICS", sequence = 1}, 
	{text = "LANGUAGE_BUTTON", menu = "OPTIONS_LANGUAGE", sequence = 0}, 
	{text = "MOVIES_BUTTON", menu = "", sequence = 2}, 
	{text = "SOUND_BUTTON", menu = "OPTIONS_SOUND", sequence = 1}, 
}
`
menu
{
	name 'START_OPTIONS'
	align center center
	ignoreEsc

	label
	{
		area 0 0 1024 768
		mosaic 'START'
	}
	label
	{
		area 112 26 786 202	
		bam 'TITLE'
		sequence 0
		align center center
		frame lua 'logoFrame'
	}
	label
	{
		area 338 192 352 456	
		bam 'BIGLOGO'
		align center center
		frame lua 'logoFrame'
	}

	button
	{
		bam 'STARTMBT'
		sequence 0
		area 112 294 262 74
		pad 10 8 10 8
		text style "button"
		text "SOUND_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_SOUND' )"
	}
	button
	{
		bam 'STARTMBT'
		sequence 3
		area 649 300 266 74
		pad 10 8 10 8
		text style "button"
		text "GRAPHICS_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_GRAPHICS' )"
	}
	button
	{
		bam 'STARTMBT'
		sequence 1
		area 112 374 236 84
		pad 10 8 10 8
		text style "button"
		text "LANGUAGE_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_LANGUAGE' )"
	}
	button
	{
		bam 'STARTMBT'
		sequence 4
		area 682 378 233 84
		pad 10 8 10 8
		text style "button"
		text "MOVIES_BUTTON"
		action "e:SelectEngine(moviesScreen)"
	}
	button
	{
		bam 'STARTMBT'
		sequence 2
		area 116 462 262 76
		pad 10 8 10 8
		text style "button"
		text "GAMEPLAY_BUTTON"
		action "Infinity_PushMenu( 'OPTIONS_GAMEPLAY' )"
	}
	button
	{
		on escape
		area 649 462 260 76
		bam 'STARTMBT'
		sequence 5
		pad 10 8 10 8
		text style "button"
		text "BACK_BUTTON"
		action
		"
			Infinity_PopMenu()
			e:SelectEngine(startEngine)
		"
	}
}
`
mapnoteSettings = {}
showNotes = 1
function showNote(instanceId)
	if(mapScreen:IsNoteVisible(mapnoteSettings[instanceId].worldCoord.x, mapnoteSettings[instanceId].worldCoord.y)
	and mapnoteSettings[instanceId].screenCoord.x >= 0
	and mapnoteSettings[instanceId].screenCoord.y >= 0) then
		return showNotes
	else
		return false
	end
end
notesAlpha = 0
function getAndIncrementNotesAlpha()
	if(notesAlpha < .99) then
		notesAlpha = notesAlpha + 0.075
	end
	if(notesAlpha > 1) then
		notesAlpha = 1
	end
	return notesAlpha
end
`
menu
{
	name 'AREA_MAP_TITLE'
	align center top
	opacity lua "notesAlpha"
	ignoreEsc
	label
	{
		name "AREA_MAP_BACKGROUND"
		area 66 0 662 92
		rectangle 0
	}
	label
	{
		area 74 8 184 74
		name "AREA_MAP_TITLE"
		text "AREA_MAP_TITLE"
		text style title
	}
		label
	{
		area 300 8 170 36
		action "mapScreen:ToggleDisplayExploredMap()"
		text "WORLDMAP_HIGHLIGHT_LABEL"
		text style "label"
		text align left center

	}
	button
	{
		area 264 8 206 36
		bam "4CHECK"
		sequence lua "mapScreen:DisplayExploredMap() and 0 or 1"
		action "mapScreen:ToggleDisplayExploredMap()"
	}

	label
	{
		area 300 42 170 40
		toggle showNotes
		text "WORLD_MAP_NOTES_LABEL"
		text style "label"
		text align left center

	}
	button
	{
		area 264 42 206 40
		bam "4CHECK"
		sequence lua "showNotes == 1 and 0 or 1"
		toggle showNotes
	}

	button
	{
		area 500 24 200 44
		bam GUIOSTLM
		sequence 0
		text style "button"
		text "WORLD_MAP_BUTTON"
		action
		"
			worldMapScreen:StartWorldMap(0)
			e:SelectEngine(worldMapScreen)
		"
	}

}
`
	areaMapHover = -1
	function showAreaMapNoteTooltip(id)
		if id == areaMapHover then
			return true
		else
			return false
		end
	end
`
