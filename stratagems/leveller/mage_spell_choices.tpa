DEFINE_ACTION_FUNCTION mage_spell_choices BEGIN

    LAF resolve_splprot_entry INT_VAR stat=274 value="-1" STR_VAR relation=not_equal RET splprot_num=value END
    LAF ds_resolve_stat INT_VAR ids=1 STR_VAR id=MARKED_FOR_AUTOLEVEL RET stat_ind END

    // trueclass mage
    LAF mage_spell_core STR_VAR kit=mage prefix=dwals0 END

    // mage kits
    MAKE_PATCH
       abjurer=>dwals1
       conjurer=>dwals2
       diviner=>dwals3
       invoker=>dwals4
       enchanter=>dwals5
       illusionist=>dwals6
       necromancer=>dwals7
       transmuter=>dwals8
    END
    ACTION_PHP_EACH patch_data AS kit=>prefix BEGIN
       LAF mage_spell_core STR_VAR kit prefix END
    END

    // bards
    LAF mage_spell_core INT_VAR all_kits=1 STR_VAR kit=bard prefix=dwalsb END

END





DEFINE_ACTION_FUNCTION mage_spell_core
INT_VAR all_kits=0
STR_VAR kit=""
        prefix=""
BEGIN
     ACTION_IF demivrgvs BEGIN
         LAF find_spellchoice_file STR_VAR folder=demivrgvs kit RET file END
     END ELSE BEGIN
        ACTION_IF iwd_arcane BEGIN
           LAF find_spellchoice_file STR_VAR folder=iwd kit RET file END
        END ELSE BEGIN
           LAF find_spellchoice_file STR_VAR folder=vanilla kit RET file END
        END
     END
     OUTER_SPRINT editstring ""
     COPY "%file%" "%workspace%"
       COUNT_2DA_ROWS 2 rowcount
       FOR (i=0;i<rowcount;i+=1) BEGIN
          READ_2DA_ENTRY i 0 2 number
          READ_2DA_ENTRY i 1 2 list
          SPRINT spell "%prefix%%number%"
          SPRINT editstring "%editstring% apply_power=>~%spell% %number%~"
          INNER_ACTION BEGIN
             LAF make_spellchoice_spell STR_VAR kit list spell END
          END
       END
     BUT_ONLY
     ACTION_IF all_kits BEGIN
        LAF edit_all_kits STR_VAR parent_class="%kit%" editstring END
     END ELSE BEGIN
        LAF edit_kit STR_VAR kit editstring END
     END
END

DEFINE_ACTION_FUNCTION find_spellchoice_file
   STR_VAR folder=vanilla
           kit=""
   RET file
BEGIN
   OUTER_SPRINT file "%scsroot%/%component_loc%/spellchoices/%folder%/%kit%.2da"
   ACTION_IF !FILE_EXISTS "%file%" BEGIN
       ACTION_MATCH "%folder%" WITH
        vanilla BEGIN
          ACTION_MATCH "%kit%" WITH 
            mage BEGIN
                FAIL "The base spellchoice folder %file% is missing"
            END
            DEFAULT
                LAF find_spellchoice_file STR_VAR folder=vanilla kit=mage RET file END
          END
        END
        DEFAULT
          LAF find_spellchoice_file STR_VAR folder=vanilla kit RET file END
       END
   END
END

DEFINE_ACTION_FUNCTION make_spellchoice_spell 
   STR_VAR kit=""
           list=""
           spell=""
BEGIN
   MAKE_PATCH
      add_basic_ability=>null
      add_effect_inline=>"opcode=>318 target=>2 timing=>0 duration=>1 parameter1=>stat_ind parameter2=>splprot_num resource=>%spell%"
   END
   LAF make_spell STR_VAR spell edits=patch_data END
   COPY_EXISTING "%spell%.spl" override
      WHILE "%list%" STRING_COMPARE "" BEGIN
         LPF return_first_entry STR_VAR list separator="-" RET entry list END
         SPRINT resource_ids "WIZARD_%entry%"
         PATCH_IF VARIABLE_IS_SET "%resource_ids%" BEGIN
           SPRINT resource EVAL "%%resource_ids%%"
           INNER_ACTION BEGIN
               LAF spell_is_unusable STR_VAR resref="%resource%" kit RET value END
           END
           PATCH_IF !value BEGIN
              LPF ADD_SPELL_EFFECT INT_VAR opcode=171 target=2 timing=1 STR_VAR resource END
           END ELSE BEGIN
                LPF warning STR_VAR warning="spell %resource_ids% (resref is %resource%) is in leveller spell choices for kit %kit% but appears unusable by that kit" END
           END
         END ELSE BEGIN
            LPF warning STR_VAR warning="unidentified spell %resource_ids% in leveller spell choices for kit %kit%" END
         END
      END
END




