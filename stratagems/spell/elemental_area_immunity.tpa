<<<<<<<< .../stratagems-inline/elemental_effects.2da
    CLERIC_CALL_LIGHTNING=>electricity
    CLERIC_GLYPH_OF_WARDING=>electricity
    CLERIC_FIRE_STORM=>fire
    WIZARD_SNILLOCS_SNOWBALL_SWARM=>cold
    WIZARD_FIREBALL=>fire
    WIZARD_LIGHTNING_BOLT=>electricity
    WIZARD_ICELANCE=>cold
    WIZARD_VITRIOLIC_SPHERE=>acid
    WIZARD_CLOUDKILL=>poison
    WIZARD_CONE_OF_COLD=>cold
    WIZARD_SUN_FIRE=>fire
    WIZARD_DEATH_FOG=>acid
    WIZARD_CHAIN_LIGHTNING=>electricity
    WIZARD_ACID_STORM=>acid
    WIZARD_DELAYED_BLAST_FIREBALL=>fire
    WIZARD_INCENDIARY_CLOUD=>fire
    WIZARD_METEOR_SWARM=>fire
    MEPHIT_LAVA=>fire
    MEPHIT_LIGHTNING_BOLT=>electricity
    MEPHIT_ICE_SHARD=>cold
    MEPHIT_FLAME_FAN=>fire
    MEPHIT_FLAME_JET=>fire
>>>>>>>>








DEFINE_ACTION_FUNCTION elemental_area_immunity BEGIN

   OUTER_SPRINT array_name elem_array
   OUTER_SPRINT array_to_read elemental_effects.2da
   OUTER_SPRINT read_array_is_inline yes
   LAM read_in_assoc_array

   ACTION_IF enhanced_edition BEGIN
      LAF E_A_I_enhanced END
   END ELSE BEGIN
      LAF E_A_I_vanilla END
   END

END


DEFINE_ACTION_FUNCTION E_A_I_enhanced BEGIN

     ACTION_DEFINE_ASSOCIATIVE_ARRAY elem_immune BEGIN
        fire=>3
        cold=>25
        acid=>79
        electricity=>81
        poison=>77
     END
     ACTION_PHP_EACH elem_array AS spell=>type BEGIN
        OUTER_SPRINT number $elem_immune("%type%")
        LAF edit_spell INT_VAR allow_missing=1 STR_VAR spell editstring="add_effect_inline=>~opcode=>324 parameter2=>%number% target=>2 duration=>1 resource=>filename~" END
     END
END




DEFINE_ACTION_FUNCTION E_A_I_vanilla BEGIN

   // this is hacky. We give immunity if you have Pro-Acid, Pro-Elec, and also alter Pro/Elements to give 100% immunity


   ACTION_IF demivrgvs BEGIN   // on SR, only do Pro/Elem
   
          // apply the protection
       ACTION_PHP_EACH elem_array AS spell=>type BEGIN
         MAKE_PATCH
          match=>"opcode=142"
          opcode=>206
          resource=>"%spell%"
          parameter1=>"-1"
          parameter2=>0
         END
         LAF edit_spell STR_VAR spell="%WIZARD_PROTECTION_FROM_THE_ELEMENTS%" editstring="clone_effect=>patch_data" END
       END


   END ELSE BEGIN
       // hack pro/elements to give 100% immunity (not on SR)

       MAKE_PATCH
          patch_effect_inline=>"match=>~parameter1=75~ parameter1=>100"
       END
       LAF edit_spell STR_VAR spell=WIZARD_PROTECTION_FROM_THE_ELEMENTS edits=patch_data END
       COPY_EXISTING "%WIZARD_PROTECTION_FROM_THE_ELEMENTS%.spl" override
          LPF patch_text_entry INT_VAR loc=0x50 STR_VAR function=substitute_string arguments="75=>100" END
       BUT_ONLY

       // apply the protection
       ACTION_PHP_EACH elem_array AS spell=>type BEGIN
         MAKE_PATCH
          match=>"opcode=142"
          opcode=>206
          resource=>"%spell%"
          parameter1=>"-1"
          parameter2=>0
         END
         ACTION_MATCH "%type%" WITH
            acid BEGIN
               LAF edit_spell STR_VAR spell="%WIZARD_PROTECTION_FROM_ACID% %WIZARD_PROTECTION_FROM_THE_ELEMENTS%" editstring="clone_effect=>patch_data" END
            END
            electricity BEGIN
               LAF edit_spell STR_VAR spell="%WIZARD_PROTECTION_FROM_ELECTRICITY% %WIZARD_PROTECTION_FROM_THE_ELEMENTS%" editstring="clone_effect=>patch_data" END
            END
            fire cold BEGIN
               LAF edit_spell STR_VAR spell=WIZARD_PROTECTION_FROM_THE_ELEMENTS editstring="clone_effect=>patch_data" END
            END
            DEFAULT
         END
       END
    END



END