DEFINE_ACTION_FUNCTION collect_iwd_animations
      STR_VAR ini=""
              anim_loc=""
              wav_loc=""
BEGIN
   MKDIR "%anim_loc%"
   MKDIR "%wav_loc%"
   COPY "%ini%" "%workspace%"
      REPLACE_TEXTUALLY "=" " "
      REPLACE_TEXTUALLY ",blank" ""
      REPLACE_TEXTUALLY "blank" ""
      READ_2DA_ENTRIES_NOW ini_entries 2
      SPRINT bam ""
      SPRINT wav_list ""
      FOR (i=0;i<ini_entries;i+=1) BEGIN
         READ_2DA_ENTRY_FORMER ini_entries i 0 key
         READ_2DA_ENTRY_FORMER ini_entries i 1 list
         PATCH_IF "%key%" STRING_EQUAL_CASE "resref" BEGIN
            SPRINT bam "%list%"
         END ELSE BEGIN
            WHILE "%list%" STRING_COMPARE_CASE "" BEGIN
                LPF return_first_entry STR_VAR list separator="," RET list entry END
                PATCH_IF (!IS_AN_INT entry && "%key%" STRING_COMPARE_CASE "resref" && "%key%" STRING_COMPARE_CASE "//" && "%key%" STRING_COMPARE_CASE "animation_type") BEGIN
                   SPRINT wav_list "%wav_list% %entry%"
                END
            END
         END
      END
      COPY_EXISTING_REGEXP "%bam%.*\.bam" "%anim_loc%"
      OUTER_WHILE "%wav_list%" STRING_COMPARE_CASE "" BEGIN
         LAF return_first_entry STR_VAR list="%wav_list%" RET wav_list=list entry END
         ACTION_IF !VARIABLE_IS_SET $wav_already("%entry%") BEGIN
            OUTER_SET $wav_already("%entry%")=1
            COPY_EXISTING "%entry%.wav" "%wav_loc%"
         END
      END

END