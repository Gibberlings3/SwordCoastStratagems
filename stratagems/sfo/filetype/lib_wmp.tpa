// this all assumes ONE ENTRY


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               overarching clone
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION clone_worldmap
    STR_VAR
           worldmap=""
           edits=""
           editstring=""
    BEGIN
         LAUNCH_ACTION_FUNCTION clone_template
                  STR_VAR file_list= ~%worldmap%~
                          file_ext=~WMP~
                          edits
                          editstring
         END
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               overarching edit
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION edit_worldmap
    STR_VAR
           worldmap=""
           edits=""
           editstring=""
    BEGIN
         LAUNCH_ACTION_FUNCTION edit_template
                  STR_VAR file_list= ~%worldmap%~
                          file_ext=~WMP~
                          edits
                          editstring
         END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               overarching make
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION make_worldmap
    STR_VAR
           worldmap=""
           edits=""
           editstring=""
    BEGIN
         LAUNCH_ACTION_FUNCTION make_template
                  STR_VAR file_list= ~%worldmap%~
                          file_ext=~WMP~
                          edits
                          editstring
                          build_before=WMP_build
         END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               offsets
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

<<<<<<<< area_offsets.2da
TYPE       offset_loc      offset_length       entrynum_loc  entrynum_length   entry_length
area       0x34            4                   0x30          4                 0xf0
link       0x38            4                   0x3c          4                 0xd8
>>>>>>>>
OUTER_SPRINT ~offset_readin_lookup_2da~ ~area_offsets~
OUTER_SPRINT ~offset_readin_file_ext~ ~WMP~
LAUNCH_ACTION_MACRO read_in_offsets


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               simple data-field edits
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ACTION_DEFINE_ASSOCIATIVE_ARRAY wmp_fields_absolute BEGIN
   width=>"0x18,LONG"
   height=>"0x1c,LONG"
   icons=>"0x40,ASCII"
   global_name_string=>"0x24,LONG"
   map=>"0x10,ASCII"
END

LAUNCH_ACTION_FUNCTION build_simple_data_field_editors STR_VAR lookup_table=wmp_fields_absolute function_prefix=WMP END

ACTION_DEFINE_ASSOCIATIVE_ARRAY wmp_fields BEGIN
   short_name=>"0x0,ASCII"
   resource=>"0x8,ASCII"
   long_name=>"0x10,ASCII20"
   sequence=>"0x34,LONG"
   x=>"0x38,LONG"
   y=>"0x3c,LONG"
   name_string=>"0x40,LONG"
  tooltip_string=>"0x44,LONG"
  loadscreen=>"0x48,ASCII"
   area_link_ind_north=>"0x50,LONG"
   area_link_ind_west=>"0x58,LONG"
   area_link_ind_south=>"0x60,LONG"
   area_link_ind_east=>"0x68,LONG"
   area_link_num_north=>"0x54,LONG"
   area_link_num_west=>"0x5c,LONG"
   area_link_num_south=>"0x64,LONG"
   area_link_num_east=>"0x6c,LONG"
   link_dest_ind=>"0x0,LONG"
   entrance=>"0x4,ASCII20"
   link_travtime_div_four=>"0x24,LONG"
   random_area_1=>"0x2c,ASCII"
   random_area_2=>"0x34,ASCII"
   random_area_3=>"0x3c,ASCII"
   random_area_4=>"0x44,ASCII"
   random_area_5=>"0x4c,ASCII"
   random_prob=>"0x54,LONG"
   link_entryloc_code=>"0x28,LONG"
END

LAUNCH_ACTION_FUNCTION build_simple_data_field_editors STR_VAR lookup_table=wmp_fields offset_base=~offset_base~ function_prefix=WMP END

ACTION_DEFINE_ASSOCIATIVE_ARRAY wmp_bit_fields BEGIN
      visible=>"0x30,0"
      visible_from_adjacent=>"0x30,1"
      reachable=>"0x30,2"
      visited=>"0x30,3"
END

LAF build_flag_data_field_editors STR_VAR lookup_table=wmp_bit_fields offset_base=~offset_base~ function_prefix=WMP  END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////              set both name and tooltip to a strref
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_both_labels
    STR_VAR arguments=""
            offset_base=""
BEGIN
    LPF WMP_name_string STR_VAR offset_base arguments END
    LPF WMP_tooltip_string STR_VAR offset_base arguments END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////              set both names and resource to string
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_quick_resource
    STR_VAR arguments=""
            offset_base=""
BEGIN
    LPF WMP_short_name STR_VAR offset_base arguments END
    LPF WMP_long_name STR_VAR offset_base arguments END
    LPF WMP_resource STR_VAR offset_base arguments END
END
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////              set the travel time
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_travel_time
    STR_VAR arguments=""
            offset_base=""
BEGIN
    SET arguments = arguments / 4
    LPF WMP_link_travtime_div_four STR_VAR arguments offset_base END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////              set the default arrival direction
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_to_dir
    STR_VAR arguments=""
            offset_base=""
BEGIN
    TO_UPPER  arguments
    PATCH_MATCH "%arguments%" WITH
                  N NORTH BEGIN SET dir_code=1 END
                  S SOUTH BEGIN SET dir_code=4 END
                  E EAST BEGIN SET dir_code=2 END
                  W WEST BEGIN SET dir_code=8 END
                  DEFAULT SET dir_code=0 END
    LPF WMP_link_entryloc_code STR_VAR arguments="%dir_code%" offset_base END
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               find name of an area by number
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_name_of_area
    INT_VAR arguments=0
    RET value
BEGIN
   GET_OFFSET_ARRAY area_arr 0x34 4 0x30 4 0 0 0xf0
   SET arr_off = $area_arr("%arguments%")
   READ_ASCII arr_off value
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               find number of an area by name
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_index_of_area
    INT_VAR arguments=""
    RET value
BEGIN
   SET value="-1"
   GET_OFFSET_ARRAY area_arr 0x34 4 0x30 4 0 0 0xf0
   PHP_EACH area_arr AS int=>offset_base BEGIN
      LPF WMP_read_short_name STR_VAR offset_base RET name=value END
      PATCH_IF "%name%" STRING_EQUAL_CASE "%arguments%" BEGIN
         SET value=int
      END
   END
   PATCH_IF value < 0 BEGIN // maybe we need to look at the longname instead
     PHP_EACH area_arr AS int=>offset_base BEGIN
      LPF WMP_read_long_name STR_VAR offset_base RET name=value END
      PATCH_IF "%name%" STRING_EQUAL_CASE "%arguments%" BEGIN
         SET value=int
      END
     END
   END
   PATCH_IF value < 0 BEGIN // maybe we need to look at the longname instead
      LPF warning STR_VAR warning="Cannot find area index for area name %arguments%" END
   END
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               update link indices for areas on the assumption that the link "deleted" has been deleted
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_update_for_link_deletion
     INT_VAR deleted=0
BEGIN
   GET_OFFSET_ARRAY area_arr 0x34 4 0x30 4 0 0 0xf0
   PHP_EACH area_arr AS int=>offset_base BEGIN
        PATCH_FOR_EACH dir IN north south east west BEGIN
           LPF "WMP_read_area_link_ind_%dir%" STR_VAR offset_base RET ind=value END
           LPF "WMP_read_area_link_num_%dir%" STR_VAR offset_base RET num=value END
           LPF WMP_link_deletion_update_helper INT_VAR ind num deleted RET ind=ind num=num END
           LPF "WMP_area_link_ind_%dir%" STR_VAR offset_base arguments="%ind%" END
           LPF "WMP_area_link_num_%dir%" STR_VAR offset_base arguments="%num%" END
        END
   END
END

DEFINE_PATCH_FUNCTION WMP_link_deletion_update_helper
     INT_VAR ind=0
             num=0
             deleted=0
     RET ind num
BEGIN
       PATCH_IF (ind <= deleted && deleted < ind+num) BEGIN
            SET num = num - 1
       END
       PATCH_IF (deleted < ind) BEGIN
            SET ind = ind - 1
       END

END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Create space for a link in the list at index new_ind
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_space_for_new_link
    INT_VAR new_ind=0
            area_ind=0
    STR_VAR area_dir=""
BEGIN
   GET_OFFSET_ARRAY area_arr 0x34 4 0x30 4 0 0 0xf0
   PHP_EACH area_arr AS int=>offset_base BEGIN
        PATCH_FOR_EACH dir IN north south east west BEGIN
           LPF "WMP_read_area_link_ind_%dir%" STR_VAR offset_base RET ind=value END
           PATCH_IF new_ind<ind BEGIN // if it's strictly less, add 1
                 SET ind += 1
           END ELSE 
           PATCH_IF new_ind>ind BEGIN // if it's strictly greater, leave it alone
           END ELSE BEGIN
              // if it's the exit group we're actually adding this to, leave it alone
              PATCH_IF !("%dir%" STRING_EQUAL_CASE "%area_dir%" & int=area_ind) BEGIN
                 // if it's of zero size, leave it where it is; otherwise, increment it
                 LPF "WMP_read_area_link_num_%dir%" STR_VAR offset_base RET num=value END
                 PATCH_IF num>0 BEGIN
                    SET ind += 1
                 END
              END
           END
           LPF "WMP_area_link_ind_%dir%" STR_VAR offset_base arguments="%ind%" END
        END
   END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Delete a list of links
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_delete_link
    STR_VAR arguments=""
BEGIN
  PATCH_IF "%arguments%" STRING_COMPARE "" BEGIN
    LPF return_first_entry STR_VAR list="%arguments%" RET deleted=entry arguments=list END
    // physically delete the bytes
    SPRINT entry_type link
    LPM get_offset_array
    PHP_EACH offset_array AS ind=>offset BEGIN
       PATCH_IF ind=deleted BEGIN
          SET delete_at=offset
       END
    END
    DELETE_BYTES delete_at 0xd8
    // update the number of links
    WRITE_LONG 0x3c ((LONG_AT 0x3c) - 1)
    // update the area data
    LPF WMP_update_for_link_deletion INT_VAR deleted END
    // update remaining deletions
    LPF WMP_deletion_helper INT_VAR deleted STR_VAR to_delete="%arguments%" already_deleted=deleted RET arguments=to_delete END
    // recurse
    LPF WMP_delete_link STR_VAR arguments END
  END
END

DEFINE_PATCH_FUNCTION WMP_deletion_helper // updates deletion index to allow for deletions already carried out
    INT_VAR deleted=0
    STR_VAR to_delete=""
    RET to_delete
BEGIN
    SPRINT list "%to_delete%"
    SPRINT to_delete ""
    WHILE "%list%" STRING_COMPARE "" BEGIN
        LPF return_first_entry STR_VAR list RET entry=entry list=list END
        PATCH_IF entry>deleted BEGIN
           SET entry = entry - 1
        END
        SPRINT to_delete "%to_delete% %entry%"
    END

END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Delete all links
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_delete_all_links
BEGIN
   READ_LONG 0x3c linknum
   WHILE linknum>0 BEGIN
      LPF WMP_delete_link INT_VAR arguments=0 END
      SET linknum=linknum - 1
   END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Get a list of links between 2 areas (identified by name)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_find_link_between
    STR_VAR arguments=""
    RET value
BEGIN
   LPF return_first_pair STR_VAR list="%arguments%" RET from=key to=value END
   LPF WMP_index_of_area STR_VAR arguments="%from%" RET from_code=value END
   LPF WMP_index_of_area STR_VAR arguments="%to%" RET to_code=value END
   LPF WMP_find_links_from INT_VAR arguments=from_code RET link_list=value END
   SPRINT file_ext WMP
   SPRINT value ""
   SPRINT entry_type link
   LPM get_offset_array
   WHILE "%link_list%" STRING_COMPARE "" BEGIN
      LPF return_first_entry STR_VAR list="%link_list%" RET link_list=list link=entry END
      READ_SHORT $offset_array("%link%") dest
      PATCH_IF dest=to_code BEGIN
          LPF push STR_VAR head="%link%" tail="%value%" RET value=list END
      END
   END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Delete the link(s) between 2 areas (identified by name)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_delete_link_between
   STR_VAR arguments=""
BEGIN
   LPF WMP_find_link_between STR_VAR arguments RET value=value END
   LPF delete_link STR_VAR arguments="%value%" END

END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Edit the link(s) between 2 areas (identified by name)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_edit_link_between
   STR_VAR arguments=""
           filename=""
   RET value
BEGIN
   SPRINT patch ""
   SPRINT from ""
   SPRINT to ""
   WHILE "%arguments%" STRING_COMPARE "" BEGIN
      LPF return_first_pair STR_VAR list="%arguments%" RET key=key value=value arguments=list END
      PATCH_MATCH "%key%" WITH
      from BEGIN
         SPRINT from "%value%"
      END
      to BEGIN
         SPRINT to "%value%"
      END
      DEFAULT
         SPRINT patch "%key% => %value% %patch%"
      END
   END
   PATCH_IF "%from%" STRING_COMPARE "" && "%to%" STRING_COMPARE "" BEGIN
      LPF WMP_find_link_between STR_VAR arguments="%from%=>%to%" RET linklist=value END
      SPRINT entry_type link
      SPRINT file_ext WMP
      LPM get_offset_array
      WHILE "%linklist%" STRING_COMPARE "" BEGIN
         LPF return_first_entry STR_VAR list="%linklist%" RET link=entry linklist=list END
         SET offset_base=$offset_array("%link%")
         LPF apply_patches_inline STR_VAR offset_base filename file_ext=WMP arguments="%patch%" END
      END
   END ELSE BEGIN
      LPF warning STR_VAR warning="Could not find from and to commands to edit link" END
   END
   SET value=1

END
OUTER_SPRINT $SFO_do_not_parse_arguments("WMP_edit_link_between") ""


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Find all links to the area with the given index
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_find_links_to
   INT_VAR arguments=0
   RET value
BEGIN
   SPRINT value ""
   SPRINT entry_type link
   SPRINT file_ext WMP
   LPM get_offset_array
   PHP_EACH offset_array AS int=>offset_base BEGIN
       LPF WMP_read_link_dest_ind STR_VAR offset_base RET this_ind=value END
       PATCH_IF this_ind=arguments BEGIN
          SPRINT value "%value% %int%"
       END
   END
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Find all links from the area with the given index
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_find_links_from
   INT_VAR arguments=0
   RET value
BEGIN
   SPRINT entry_type area
   SPRINT file_ext WMP
   LPM get_offset_array 
   SET offset_base=$offset_array("%arguments%")
   SPRINT value ""
   PATCH_FOR_EACH dir IN north south east west BEGIN
           LPF "WMP_read_area_link_ind_%dir%" STR_VAR offset_base RET ind=value END
           LPF "WMP_read_area_link_num_%dir%" STR_VAR offset_base RET num=value END
           FOR (i=0;i<num;i+=1) BEGIN
              SET this_num=ind + i
              SPRINT value "%value% %this_num%"
           END
   END
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Add a link between two areas
/////////////               "arguments" is of form "from=[area shortname] to=[area_shortname] dir_from=[NSEW] func=arg"
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_insert_link
    STR_VAR arguments=""
            filename=""
BEGIN
   SPRINT editstring ""
   WHILE "%arguments%" STRING_COMPARE "" BEGIN
      LPF return_first_pair STR_VAR list="%arguments%" RET type=key value=value arguments=list END
      PATCH_MATCH "%type%" WITH
         from BEGIN
              LPF WMP_index_of_area STR_VAR arguments="%value%" RET from_code=value END
         END
         to BEGIN
              LPF WMP_index_of_area STR_VAR arguments="%value%" RET to_code=value END
         END
         dir_from from_dir BEGIN
                  PATCH_MATCH "%value%" WITH
                  N BEGIN SPRINT dir_from north END
                  S BEGIN SPRINT dir_from south END
                  E BEGIN SPRINT dir_from east END
                  W BEGIN SPRINT dir_from west END
                  DEFAULT SPRINT dir_from "%value%" END
         END
      DEFAULT
         SPRINT editstring "%editstring% %type% => %value%"
      END
   END
   PATCH_IF (!VARIABLE_IS_SET from_code | !VARIABLE_IS_SET to_code | !VARIABLE_IS_SET dir_from) BEGIN
         LPF warning STR_VAR warning="Cannot insert area link: source or destination or direction of travel unspecified" END
   END ELSE BEGIN
     // insert link
     LPF WMP_insert_link_by_codes INT_VAR area_ind=from_code STR_VAR area_dir="%dir_from%" RET offset_base=insert_offset END
     // write destination
     LPF WMP_link_dest_ind STR_VAR offset_base arguments="%to_code%" END
     // patch
     LPF apply_patches_inline STR_VAR filename file_ext=WMP editstring offset_base END
   END
END
OUTER_SPRINT $SFO_do_not_parse_arguments("WMP_insert_link") ""


DEFINE_PATCH_FUNCTION WMP_insert_link_by_codes
      INT_VAR  area_ind=0
      STR_VAR  area_dir=""
      RET insert_offset
BEGIN
      // find link data
      SPRINT entry_type area
      SPRINT file_ext WMP
      LPM get_offset_array
      SET offset_base = $offset_array("%area_ind%")
      LPF "WMP_read_area_link_ind_%area_dir%" STR_VAR offset_base RET ind=value END
      LPF "WMP_read_area_link_num_%area_dir%" STR_VAR offset_base RET num=value END
      // update offsets
      SET new_num=num + 1
      LPF "WMP_area_link_num_%area_dir%" STR_VAR offset_base arguments="%new_num%" END
      LPF WMP_space_for_new_link INT_VAR new_ind=ind area_ind STR_VAR area_dir END
      
      // physically insert space
      READ_LONG 0x38 offset_base
      SET link_num=ind+num
      SET insert_offset=offset_base + 0xd8 * link_num
      INSERT_BYTES insert_offset 0xd8
      WRITE_LONG 0x3c ((LONG_AT 0x3c) + 1)
END
OUTER_SPRINT $SFO_do_not_parse_arguments("WMP_insert_link_by_codes") ""


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////               Delete an area (identified via short name) or list of areas
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_delete_area
   STR_VAR arguments=""
BEGIN
 PATCH_IF "%arguments%" STRING_COMPARE "" BEGIN
 SPRINT area_name "%arguments%"
   LPF return_first_entry STR_VAR list="%arguments%" RET area_name=entry arguments=list END
   // find area code
   LPF WMP_index_of_area STR_VAR arguments="%area_name%" RET area_code=value END
   // delete links to and from the area
   LPF WMP_find_links_from INT_VAR arguments="%area_code%" RET exits_from=value END
   LPF WMP_delete_link STR_VAR arguments="%exits_from%" END
   LPF WMP_find_links_to INT_VAR arguments="%area_code%" RET exits_to=value END
   LPF WMP_delete_link STR_VAR arguments="%exits_to%" END
   // update remaining links
   SPRINT entry_type link
   SPRINT file_ext WMP
   LPM get_offset_array
   PHP_EACH offset_array AS int=>offset_base BEGIN
      LPF WMP_read_link_dest_ind STR_VAR offset_base RET dest=value END
      PATCH_IF (dest>area_code) BEGIN
         SET dest = dest - 1
         LPF WMP_link_dest_ind STR_VAR offset_base arguments="%dest%" END
      END
   END
   // physically delete the area

   SPRINT entry_type area
   LPM get_offset_array
   SET delete_at=$offset_array("%area_code%")
   DELETE_BYTES delete_at 0xf0

   // update offsets
   
   WRITE_LONG 0x30 ((LONG_AT 0x30) - 1)
   
   WRITE_LONG 0x38 ((LONG_AT 0x38) - 0xf0)
   LPF WMP_delete_area STR_VAR arguments END
   END
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////        Area adder (wrapper for add_entry)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION insert_area
    STR_VAR filename=""
            arguments=""
BEGIN
    LPF add_entry_inline INT_VAR at_end=1 STR_VAR arguments="apply_patches=>%arguments% type=>area" filename file_ext=WMP END
END



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////            Builder (for completeness, really)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION WMP_build BEGIN
    INSERT_BYTES 0x0 0xc8
    WRITE_ASCII 0x0 "WMP V1.0"
    WRITE_LONG 0x8 1
    WRITE_LONG 0xc 0x10
    WRITE_LONG 0x34 0xc8
    WRITE_LONG 0x38 0xc8
END

