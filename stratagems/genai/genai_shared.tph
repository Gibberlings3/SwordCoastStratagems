LAF include STR_VAR files="hla.tph" locbase=lib END

DEFINE_ACTION_FUNCTION build_genai_script
       INT_VAR force_build=0
       STR_VAR script=""
BEGIN
       // scripts are named as follows:
     //
     // dw[1/2/3][m/r][c/p/s/m][0/1/2/3/4/5/6][ge/ke/ba/be/as/ar/th/ws/mn/ss/dm/pa/bg/st/dd]
     //
     // where: m/r is melee/range
     //        1/2/3 is BG1/BG2/BG2 with HLAs
     //        c/p/s/m is crushing/piercing/slashing/missile damage
     //        0/1/2/3/4/5/6 is the plus on your weapon type [but all EE scripts default to "2", since we use WeaponCanDamage etc instead of enchantment tricks]
     //        mo is unintelligent, ge is generic, ke is kensai, ba is barbarian, be is berserker, as is assassin, ar is archer, th is thief (or stalker), ws is wizard-slayer, mn is monk, dm is dark moon, ss is sun soul, pa is paladin, bg is blackguard, st is stalker, dd is dwarven defender
     //        mw and gw are the unintelligent and generic blocks with a "wander-around" block on the end
     //
   LAF define_difficulty STR_VAR type=genai RET difficulty_variable END
   OUTER_SPRINT difficulty_marker_object dw#mkhla

   OUTER_INNER_PATCH ~~ BEGIN
         TO_LOWER script
   END
   OUTER_SPRINT scriptname ~%script%~
   ACTION_IF (!FILE_EXISTS_IN_GAME ~%scriptname%.bcs~ || force_build=1) BEGIN
      OUTER_SET warning=0
      OUTER_INNER_PATCH ~~ BEGIN
         TO_LOWER script
      END
      OUTER_INNER_PATCH ~%script%~ BEGIN
              READ_ASCII 0x2 power (1)
              PATCH_MATCH ~%power%~ WITH
              1 BEGIN
                 SPRINT variables ~IsBG1=True&IsHighLevel=False&ArrowSafe=ArrowSafeBG1~
              END
              2 BEGIN
                 SPRINT variables ~IsBG1=False&IsHighLevel=False~
              END
              3 BEGIN
                 SPRINT variables ~IsBG1=False&IsHighLevel=True~
              END
              DEFAULT
                 SET warning=1
              END
              READ_ASCII 0x3 type (1)
              PATCH_MATCH ~%type%~ WITH
              m BEGIN
                 SPRINT base dw#melee
              END
              r BEGIN
                 SPRINT base dw#range
                 SPRINT ~variables~ ~%variables%&IsRanged=True~
              END
              DEFAULT
                 SET warning=1
              END
              PATCH_IF power=1 BEGIN
                SPRINT variables ~%variables%&MyWeaponStrength=Null&MyWeaponDamageType=Null~
              END ELSE BEGIN
                READ_ASCII 0x4 dmg (1)
                PATCH_MATCH ~%dmg%~ WITH
                c BEGIN
                  SPRINT variables ~%variables%&MyWeaponDamageType=Crushing~
                END
                s BEGIN
                  SPRINT variables ~%variables%&MyWeaponDamageType=Slashing~
                END
                p BEGIN
                  SPRINT variables ~%variables%&MyWeaponDamageType=Piercing~
                END
                m BEGIN
                  SPRINT variables ~%variables%&MyWeaponDamageType=MultipleDamageType~
                END
                DEFAULT
                   SET warning=1
                END
                READ_ASCII 0x5 power (1)
                SET power=power>6?6:power
                SPRINT variables ~%variables%&MyWeaponStrength=%power%~
              END
              READ_ASCII 0x6 class (2)
              // set class variables
              PATCH_MATCH ~%class%~ WITH
              mo BEGIN
                 SPRINT variables ~%variables%&IsMoron=True~
              END
              ge BEGIN END
              ke BEGIN
                 SPRINT variables ~%variables%&IsKensai=True~
              END
              ba BEGIN
                 SPRINT variables ~%variables%&IsBarbarian=True~
              END
              be BEGIN
                 SPRINT variables ~%variables%&IsBerserker=True~
              END
              as BEGIN
                 SPRINT variables ~%variables%&IsAssassin=True~
              END
              ar BEGIN
                 SPRINT variables ~%variables%&IsArcher=True~
              END
              th BEGIN
                 SPRINT variables ~%variables%&IsThief=True~
              END
              ws BEGIN
                 SPRINT variables ~%variables%&IsWizardSlayer=True~
              END
              mn BEGIN
                 SPRINT variables ~%variables%&IsMonk=True~
              END
              mw BEGIN
                SPRINT variables ~%variables%&IsMoron=True&IsWandering=True~
              END
              gw BEGIN
                SPRINT variables ~%variables%&IsWandering=True~
              END
              ss BEGIN
                 SPRINT variables "%variables%&IsMonk=True&IsSunSoul=True"
              END
              dm BEGIN
                 SPRINT variables "%variables%&IsMonk=True&IsDarkMoon=True"
              END
              pa BEGIN
                 SPRINT variables ~%variables%&IsPaladin=True~
              END
              bg BEGIN
                 SPRINT variables ~%variables%&IsBlackguard=True~
              END
              st BEGIN
                 SPRINT variables ~%variables%&IsStalker=True~
              END
              dd BEGIN
                 SPRINT variables ~%variables%&IsDwarvenDefender=True~
              END
              DEFAULT
                SET warning=1
              END
      END
      ACTION_IF warning=0 BEGIN
         LAF ssl_to_bcs STR_VAR script= ~%base%~ variables location=~genai/ssl~ rename_to= ~%scriptname%~ END
      END ELSE BEGIN
         LAF warning STR_VAR warning= ~Cannot parse genai script %script%~ END
      END
  END
END

////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION genai
STR_VAR arguments="all" filename=""
BEGIN
           LPF CRE_read_class RET class=value END
           LPF CRE_read_kit RET kit=value END
           LPF CRE_read_level RET level=value END
           SET identified=0
           // parse input
           PATCH_FOR_EACH argtype IN all kit hla prof script conditional fix_thac0 abils BEGIN
              PATCH_IF (INDEX (CASE_INSENSITIVE ~%argtype%~ ~%arguments%~)>=0) BEGIN
                 SET  ~install_%argtype%~=1
              END ELSE BEGIN
                 SET  ~install_%argtype%~=0
              END
           END
           // split up the GPxxx scripts
           LPF split_gp_scripts STR_VAR filename END
           // check if there is a script we're willing to swap
           LPF locate_genai_script RET loc wander END
           // THAC0 adjustments
           PATCH_IF (install_fix_thac0=1) BEGIN
              LPF CRE_enforce_thac0 STR_VAR arguments=within_tolerance END
           END
           // look to see if we should be assigning a script
           PATCH_IF (install_all=1 || install_script=1) BEGIN
                 PATCH_IF loc>=0 BEGIN
                       LPF identify_weapon_preferences STR_VAR filename RET has_ranged skip_me onhandprof offhandprof rangedprof damagetype enchantment style END
                       SET identified=1
                       PATCH_IF enhanced_edition BEGIN
                          SET enchantment=2 // it doesn't matter on EE, just make it constant to avoid script duplication
                       END
                       LPF CRE_check_if_moron RET is_moron=value END
                 END
           END    
           // hlas (we only install hlas if we are adding a script)
           PATCH_IF ((install_all=1 || install_hla=1) && (identified=1 || install_conditional=0) && loc>=0 && !disable_hlas ) BEGIN
               LPF grant_hlas STR_VAR class kit resref="%filename%" RET has_hlas END
           END ELSE BEGIN
              SET has_hlas=0
           END
           // actually assign the script
           PATCH_IF identified BEGIN
                       LPF assign_genai_script INT_VAR loc wander is_moron has_ranged enchantment has_hlas STR_VAR damagetype filename END
           END
           // kit
           PATCH_IF ((install_all=1 || install_kit=1) && (identified=1 || install_conditional=0)) BEGIN
              LPF CRE_enforce_class STR_VAR filename arguments="enforce_whitelist" END
           END
           // profs
           PATCH_IF ((install_all=1 || install_prof=1) && (identified=1 || install_conditional=0)) BEGIN
              PATCH_IF identified=0 BEGIN
                       LPF identify_weapon_preferences STR_VAR filename RET has_ranged skip_me onhandprof offhandprof rangedprof style END
              END
              PATCH_IF skip_me=0 BEGIN
                  LPF allocate_proficiencies INT_VAR onhandprof offhandprof rangedprof style level STR_VAR class kit END
              END
           END
           // ability scores
           PATCH_IF (install_all=1 || install_abils=1) BEGIN
              PATCH_MATCH "%class%" WITH
              ".*FIGHTER.*" ".*RANGER" PALADIN MONK BEGIN
                   LPF determine_stat INT_VAR lower=12 higher=18 STR_VAR stat=strength END
                   LPF determine_stat INT_VAR lower=12 higher=18 STR_VAR stat=constitution END
              END
              DEFAULT END
              PATCH_MATCH "%class%" WITH
              ".*THIEF.*" BEGIN
                   LPF determine_stat INT_VAR lower=14 higher=18 STR_VAR stat=dexterity END
              END
              DEFAULT END
           END
END

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////    split up GPMERC/GPARCHER/GPTHIEF so that the help script is separated
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION split_gp_scripts
   STR_VAR filename=""
BEGIN
   SPRINT gpscript ~~
   SET has_gp=0
   FOR (i=0x248;i<0x270;i+=8) BEGIN
      READ_ASCII i temp
      TO_LOWER temp
      PATCH_MATCH ~%temp%~ WITH
      gpmerc gparcher gpthief chalpc01 gpkensai balmonk BEGIN
             SPRINT gpscript ~%temp%~
             SET has_gp=1
      END
      DEFAULT END
   END
   PATCH_IF has_gp BEGIN
     PATCH_MATCH ~%gpscript%~ WITH
     gpmerc gparcher gpthief chalpc01 gpkensai balmonk BEGIN
           LPF CRE_insert_script STR_VAR arguments=~dw#gphlp above %gpscript%~ filename END
     END
     DEFAULT END
   END
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////    Go through the script slots (hardcoded) looking for a combat script. If found, return loc=location (0-5) of
////    first script and delete all scripts. Also return wander=1 if script is wdasight or the like, and delete gpuse et al
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION locate_genai_script
RET loc wander combatscript
BEGIN
   PATCH_IF !VARIABLE_IS_SET combat_scripts_read BEGIN
      LAUNCH_PATCH_MACRO read_in_combat_scripts
   END
   SPRINT combatscript ~~
   SET loc= "-1"
   SET wander=0
   FOR (i=0;i<5;i+=1) BEGIN
      READ_ASCII 0x248+8*i script
      READ_ASCII 0x248+8*i script8 (8)
      TO_LOWER script
      INNER_PATCH "%script8%" BEGIN
         READ_ASCII 0x0 prefix (3)
         PATCH_MATCH "%prefix%" WITH 
         DW1 DW2 DW3 BEGIN
             SET loc=i
             READ_ASCII 0x7 wander_char (1)
             PATCH_IF "%wander_char%" STRING_EQUAL_CASE w BEGIN
                SET wander=1
             END
         END
         DEFAULT END
      END
      PATCH_IF VARIABLE_IS_SET $combat_script( ~%script%~) BEGIN
         PATCH_IF (loc="-1") BEGIN
           PATCH_MATCH ~%script%~ WITH gpuse useitem BEGIN END DEFAULT SET loc=i END
         END
         PUSH combatscript ~%script%~
         WRITE_ASCII 0x248+8*i ~~ (8)

      END
      PATCH_MATCH ~%script%~ WITH wdasight wdarsgt _dasight _wdarsgt BEGIN
         SET wander=1
      END
      DEFAULT END
   END
END


/////////////////////////////////////////////////////////////////////////////////////////////
///        Allocates a script
/////////////////////////////////////////////////////////////////////////////////////////////


DEFINE_PATCH_FUNCTION assign_genai_script
          INT_VAR loc=0 wander=0 is_moron=0 has_ranged=0 level=0 enchantment=0 has_hlas=0
          STR_VAR filename="" damagetype="slashing"
BEGIN
          // limit enchantment to single digits
          SET enchantment=enchantment>9?9:enchantment

          // work out class data
          LPF CRE_read_kit RET kit=value END
          // start with the base
          PATCH_IF has_ranged=1 BEGIN
             SPRINT scripttype r
          END ELSE BEGIN
             SPRINT scripttype m
          END
          // get the damage type
          PATCH_MATCH ~%damagetype%~ WITH
          slashing BEGIN
             SPRINT scriptdmg s
          END
          crushing BEGIN
             SPRINT scriptdmg c
          END
          piercing BEGIN
             SPRINT scriptdmg p
          END
          DEFAULT
             SPRINT scriptdmg m
          END
          // work out number
          LPF is_bg1_char STR_VAR filename RET value END
          SET scriptnum = value? 1 : (has_hlas? 3 : 2)
          
          // work out code
          PATCH_MATCH ~%kit%~ WITH
          KENSAI BEGIN
               SPRINT scriptcode ke
          END
          BARBARIAN BEGIN
               SPRINT scriptcode ba
          END
          BERSERKER BEGIN
               SPRINT scriptcode be
          END
          ARCHER BEGIN
               SPRINT scriptcode ar
          END
          STALKER BEGIN
               SPRINT scriptcode st
          END
          ASSASIN ASSASSIN BEGIN // spelling mistake in KIT.IDS
               SPRINT scriptcode as
          END
          SWASHBUCKLER BEGIN
               SPRINT scriptcode ge
          END
          DARK_MOON BEGIN
               SPRINT scriptcode dm
          END
          SUN_SOUL BEGIN
               SPRINT scriptcode ss
          END
          BLACKGUARD BEGIN
               SPRINT scriptcode bg
          END
          DWARVEN_DEFENDER BEGIN
               SPRINT scriptcode dd
          END
          DEFAULT
               LPF CRE_read_class RET class=value END
               PATCH_MATCH ~%class%~ WITH
               MONK BEGIN
                  SPRINT scriptcode mn
               END
               THIEF MAGE_THIEF FIGHTER_THIEF FIGHTER_MAGE_THIEF CLERIC_THIEF BEGIN
                  SPRINT scriptcode th
               END
               PALADIN BEGIN
                  SPRINT scriptcode pa
               END
               DEFAULT
                PATCH_IF is_moron=0 BEGIN
                  PATCH_IF wander=0 BEGIN
                      SPRINT scriptcode ge
                  END ELSE BEGIN
                      SPRINT scriptcode gw
                  END
                END ELSE BEGIN
                  PATCH_IF wander=0 BEGIN
                      SPRINT scriptcode mo
                  END ELSE BEGIN
                      SPRINT scriptcode mw
                  END
                END
               END
          END
          PATCH_IF scriptnum=1 BEGIN
               PATCH_IF ~%scripttype%~ STRING_EQUAL_CASE m BEGIN
                  SPRINT scripttype_bg1 mel
               END ELSE BEGIN
                  SPRINT scripttype_bg1 ran
               END
               SPRINT script ~dw1%scripttype_bg1%%scriptcode%~
          END ELSE BEGIN
               SPRINT script ~dw%scriptnum%%scripttype%%scriptdmg%%enchantment%%scriptcode%~
          END
          SPRINT scriptname ~%script%~

          WRITE_ASCIIE (0x248+0x8 * loc) ~~ (8)
          LPF CRE_insert_script_low STR_VAR arguments="%script%" END
          // if necessary, make the script
          INNER_ACTION BEGIN
             LAF build_genai_script STR_VAR script END
          END
END


///////////////////////////////////////////////////////////////////////////////////////////
///      Read in combat scripts (i.e. those we aim to replace)
///////////////////////////////////////////////////////////////////////////////////////////

DEFINE_PATCH_MACRO read_in_combat_scripts BEGIN
    PATCH_IF !(VARIABLE_IS_SET ~combat_scripts_read~) BEGIN
       SET combat_scripts_read=1
       PATCH_FOR_EACH script IN
              carch20b thiefrg amsmug01 cassa20b cassa20c cthie20a cthie20b thief14t
              kuoarc20 magesly gpkensai gpthief gparcher duearc01 duewar01 ft12t palad10 palad16
               ATTACKPC cbarb20b cbers20b cfigh20a
              cfigh20b cfigh30b fight16a chalcy02 attackpc cdryad dreadwlf ghast
              kuowar20 ogre CKENS20B CKENS30B KENSAI gpmerc
               wtasight wtarsgt wdasight wdarsgt
              _tasight _wtarsgt _dasight _wdarsgt gpuse useitem gorcamb4 gorcamb5
              balmonk cmonk20b sendai4 ohbai01
       BEGIN
          TO_LOWER ~script~
          SPRINT $combat_script(~%script%~) ~~
       END
    END
END

